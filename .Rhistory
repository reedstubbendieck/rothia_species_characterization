theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(10, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(70, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(69, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(10, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
# ANIm heat map figure
ANIm_heatmap <- ggplot(data = rothia_ANI_dDDH_results_ABIm, aes(x = query, y = target, fill = ANIm)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(95, 100),
breaks = c(80, 90, 100),
labels = c("80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "ANIm (%)")
ANIm_heatmap
view(rothia_ANI_dDDH_results_dDDH)
library(tidyverse)
view(rothia_ANI_dDDH_results_dDDH)
View(dDDH_matrix)
library(readr)
library(tidyverse)
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
rothia_dDDH_clustering_2 <- hclust(dist(t(dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIb <- rothia_ANI_dDDH_results %>%
select(query, target, ANIb)
## convert to matrix for clustering
ANIb_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIb, names_from = target, values_from = ANIb) %>% column_to_rownames("query"))
## clustering
rothia_ANIb_clustering <- hclust(dist((ANIb_matrix), method = "euclidean"), method = "ward.D2")
rothia_ANIb_clustering_2 <- hclust(dist(t(ANIb_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering_2$labels)[rothia_ANIb_clustering_2$order])
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIm <- rothia_ANI_dDDH_results %>%
select(query, target, ANIm)
## convert to matrix for clustering
ANIm_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIm, names_from = target, values_from = ANIm) %>% column_to_rownames("query"))
## clustering
rothia_ANIm_clustering <- hclust(dist((ANIm_matrix), method = "euclidean"), method = "ward.D2")
rothia_ANIm_clustering_2 <- hclust(dist(t(ANIm_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIm$query <- factor(rothia_ANI_dDDH_results_ABIm$query, levels = (rothia_ANIm_clustering$labels)[rothia_ANIm_clustering$order])
rothia_ANI_dDDH_results_ABIm$target <- factor(rothia_ANI_dDDH_results_ABIm$target, levels = (rothia_ANIm_clustering_2$labels)[rothia_ANIm_clustering_2$order])
# standard theme for all ggplot objects
gg_theme <- theme_classic() +
theme(axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black"),
axis.ticks.y = element_line(color = "black", linewidth = 0.25),
axis.ticks.x = element_line(color = "black", linewidth = 0.25),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.25),
plot.background = element_blank(),
legend.position = "none",
legend.title=element_blank(),
)
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(10, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
# ANIb heat map figure
ANIb_heatmap <- ggplot(data = rothia_ANI_dDDH_results_ABIb, aes(x = query, y = target, fill = ANIb)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(70, 100),
breaks = c(70, 80, 90, 100),
labels = c("70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "ANIb (%)")
ANIb_heatmap
ANIb_heatmap
# ANIm heat map figure
ANIm_heatmap <- ggplot(data = rothia_ANI_dDDH_results_ABIm, aes(x = query, y = target, fill = ANIm)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(80, 100),
breaks = c(80, 90, 100),
labels = c("80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "ANIm (%)")
ANIm_heatmap
View(ANIb_matrix)
write.csv(ANIb_matrix, file="./tables/ANIb.csv")
write.csv(ANIb_matrix, file="./tables/ANIb.csv")
ANIb_matrix_reordered <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering_2$labels[rothia_ANIb_clustering_2$order]]
View(ANIb_matrix_reordered)
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering_2$labels[rothia_ANIb_clustering_2$order]]
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
rothia_dDDH_clustering_2 <- hclust(dist(t(dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
dDDH_matrix <- dDDH_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering_2$labels[rothia_ANIb_clustering_2$order]]
View(dDDH_matrix)
dDDH_matrix <- dDDH_matrix[rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order],
rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order]]
ANIm_matrix <- ANIm_matrix[rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order],
rothia_ANIm_clustering_2$labels[rothia_ANIm_clustering_2$order]]
view(ANIm_matrix)
write.csv(ANIm_matrix, file="./tables/ANIm.csv")
write.csv(dDDH_matrix, file="./tables/dDDH.csv")
view(ANIb_matrix)
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
rothia_dDDH_clustering_2 <- hclust(dist(t(dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
dDDH_matrix <- dDDH_matrix[rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order],
rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIb <- rothia_ANI_dDDH_results %>%
select(query, target, ANIb)
## convert to matrix for clustering
ANIb_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIb, names_from = target, values_from = ANIb) %>% column_to_rownames("query"))
## clustering
rothia_ANIb_clustering <- hclust(dist((ANIb_matrix), method = "euclidean"), method = "ward.D2")
rothia_ANIb_clustering_2 <- hclust(dist(t(ANIb_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering_2$labels)[rothia_ANIb_clustering_2$order])
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering_2$labels[rothia_ANIb_clustering_2$order]]
View(ANIb_matrix)
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIm <- rothia_ANI_dDDH_results %>%
select(query, target, ANIm)
## convert to matrix for clustering
ANIm_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIm, names_from = target, values_from = ANIm) %>% column_to_rownames("query"))
## clustering
rothia_ANIm_clustering <- hclust(dist((ANIm_matrix), method = "euclidean"), method = "ward.D2")
rothia_ANIm_clustering_2 <- hclust(dist(t(ANIm_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIm$query <- factor(rothia_ANI_dDDH_results_ABIm$query, levels = (rothia_ANIm_clustering$labels)[rothia_ANIm_clustering$order])
rothia_ANI_dDDH_results_ABIm$target <- factor(rothia_ANI_dDDH_results_ABIm$target, levels = (rothia_ANIm_clustering_2$labels)[rothia_ANIm_clustering_2$order])
ANIm_matrix <- ANIm_matrix[rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order],
rothia_ANIm_clustering_2$labels[rothia_ANIm_clustering_2$order]]
view(ANIm_matrix)
ANIm_matrix <- ANIm_matrix[rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order],
rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order]]
view(ANIm_matrix)
write.csv(ANIb_matrix, file="./tables/ANIb.csv")
write.csv(ANIm_matrix, file="./tables/ANIm.csv")
write.csv(dDDH_matrix, file="./tables/dDDH.csv")
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
dDDH_matrix <- dDDH_matrix[rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order],
rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIb <- rothia_ANI_dDDH_results %>%
select(query, target, ANIb)
## convert to matrix for clustering
ANIb_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIb, names_from = target, values_from = ANIb) %>% column_to_rownames("query"))
## clustering
rothia_ANIb_clustering <- hclust(dist((ANIb_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order]]
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
dDDH_matrix <- dDDH_matrix[rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order],
rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIb <- rothia_ANI_dDDH_results %>%
select(query, target, ANIb)
## convert to matrix for clustering
ANIb_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIb, names_from = target, values_from = ANIb) %>% column_to_rownames("query"))
## clustering
rothia_ANIb_clustering <- hclust(dist((ANIb_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order]]
view(ANIb_matrix)
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
dDDH_matrix <- dDDH_matrix[rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order],
rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIb <- rothia_ANI_dDDH_results %>%
select(query, target, ANIb)
## convert to matrix for clustering
ANIb_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIb, names_from = target, values_from = ANIb) %>% column_to_rownames("query"))
## clustering
rothia_ANIb_clustering <- hclust(dist((ANIb_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIm <- rothia_ANI_dDDH_results %>%
select(query, target, ANIm)
## convert to matrix for clustering
ANIm_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIm, names_from = target, values_from = ANIm) %>% column_to_rownames("query"))
## clustering
rothia_ANIm_clustering <- hclust(dist((ANIm_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIm$query <- factor(rothia_ANI_dDDH_results_ABIm$query, levels = (rothia_ANIm_clustering$labels)[rothia_ANIm_clustering$order])
rothia_ANI_dDDH_results_ABIm$target <- factor(rothia_ANI_dDDH_results_ABIm$target, levels = (rothia_ANIm_clustering$labels)[rothia_ANIm_clustering$order])
ANIm_matrix <- ANIm_matrix[rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order],
rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order]]
view(dDDH_matrix)
view(ANIb_matrix)
view(ANIm_matrix)
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(10, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
desired_order <- c("P31", "ATCC27570", "CCTCCAB206069", "LMG23708", "140917MRSA09",
"J18", "YIM67062", "CCUG35957", "A117B", "ATCC17931", "576267",
"RSM386", "RSM292", "RSM407", "RSM42")
# Reorder rows and columns for ANIb_matrix
ANIb_matrix <- ANIb_matrix[desired_order, desired_order]
view(unique(rothia_ANI_dDDH_results$query))
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
library(readr)
library(tidyverse)
# ANI and dDDH results
rothia_ANI_dDDH_results <- read_csv("./derivedData/rothia_ANI_dDDH_results.csv")
# dDDH
## subset to dDDH results
rothia_ANI_dDDH_results_dDDH <- rothia_ANI_dDDH_results %>%
select(query, target, DDH)
## convert to matrix for clustering
dDDH_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_dDDH, names_from = target, values_from = DDH) %>% column_to_rownames("query"))
## clustering
rothia_dDDH_clustering <- hclust(dist((dDDH_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in DDH data
rothia_ANI_dDDH_results_dDDH$query <- factor(rothia_ANI_dDDH_results_dDDH$query, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
rothia_ANI_dDDH_results_dDDH$target <- factor(rothia_ANI_dDDH_results_dDDH$target, levels = (rothia_dDDH_clustering$labels)[rothia_dDDH_clustering$order])
dDDH_matrix <- dDDH_matrix[rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order],
rothia_dDDH_clustering$labels[rothia_dDDH_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIb <- rothia_ANI_dDDH_results %>%
select(query, target, ANIb)
## convert to matrix for clustering
ANIb_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIb, names_from = target, values_from = ANIb) %>% column_to_rownames("query"))
## clustering
rothia_ANIb_clustering <- hclust(dist((ANIb_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIb$query <- factor(rothia_ANI_dDDH_results_ABIb$query, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
rothia_ANI_dDDH_results_ABIb$target <- factor(rothia_ANI_dDDH_results_ABIb$target, levels = (rothia_ANIb_clustering$labels)[rothia_ANIb_clustering$order])
ANIb_matrix <- ANIb_matrix[rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order],
rothia_ANIb_clustering$labels[rothia_ANIb_clustering$order]]
#ANIb
## subset to ANIb results
rothia_ANI_dDDH_results_ABIm <- rothia_ANI_dDDH_results %>%
select(query, target, ANIm)
## convert to matrix for clustering
ANIm_matrix <- as.matrix(tidyr::pivot_wider(rothia_ANI_dDDH_results_ABIm, names_from = target, values_from = ANIm) %>% column_to_rownames("query"))
## clustering
rothia_ANIm_clustering <- hclust(dist((ANIm_matrix), method = "euclidean"), method = "ward.D2")
# reorder levels in ANIb data
rothia_ANI_dDDH_results_ABIm$query <- factor(rothia_ANI_dDDH_results_ABIm$query, levels = (rothia_ANIm_clustering$labels)[rothia_ANIm_clustering$order])
rothia_ANI_dDDH_results_ABIm$target <- factor(rothia_ANI_dDDH_results_ABIm$target, levels = (rothia_ANIm_clustering$labels)[rothia_ANIm_clustering$order])
ANIm_matrix <- ANIm_matrix[rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order],
rothia_ANIm_clustering$labels[rothia_ANIm_clustering$order]]
# standard theme for all ggplot objects
gg_theme <- theme_classic() +
theme(axis.text.y = element_text(color = "black"),
axis.text.x = element_text(color = "black"),
axis.ticks.y = element_line(color = "black", linewidth = 0.25),
axis.ticks.x = element_line(color = "black", linewidth = 0.25),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.25),
plot.background = element_blank(),
legend.position = "none",
legend.title=element_blank(),
)
# dDDH heat map figure
dDDH_heatmap <- ggplot(data = rothia_ANI_dDDH_results_dDDH, aes(x = query, y = target, fill = DDH)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(10, 100),
breaks = c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100),
labels = c("10%", "20%", "30%", "40%", "50%","60%","70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "dDDH (%)")
dDDH_heatmap
dDDH_heatmap
# ANIb heat map figure
ANIb_heatmap <- ggplot(data = rothia_ANI_dDDH_results_ABIb, aes(x = query, y = target, fill = ANIb)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(70, 100),
breaks = c(70, 80, 90, 100),
labels = c("70%", "80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "ANIb (%)")
ANIb_heatmap
ANIb_heatmap
# ANIm heat map figure
ANIm_heatmap <- ggplot(data = rothia_ANI_dDDH_results_ABIm, aes(x = query, y = target, fill = ANIm)) +
gg_theme +
geom_tile() +
scale_fill_gradient(limits = c(80, 100),
breaks = c(80, 90, 100),
labels = c("80%", "90%", "100%")) +
theme(legend.position = "bottom",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(fill = "ANIm (%)")
ANIm_heatmap
ANIm_heatmap
desired_order <- c("P31", "257", "36", "ATCC27570", "CCTCCAB206069",
"140917MRSA09", "J18", "YIM67062", "LMG23708",
"CCUG35957", "A117B", "ATCC17931", "576267",
"RSM386", "RSM292", "RSM407", "RSM42")
# Reorder rows and columns for ANIb_matrix
ANIb_matrix <- ANIb_matrix[desired_order, desired_order]
View(rothia_ANI_dDDH_results)
desired_order <- c("P31", "257", "36", "ATCC27570", "CCTCCAB206069",
"140917MRSA09", "J18", "YIM67072", "LMG23708",
"CCUG35957", "A117B", "ATCC17931", "576267",
"RSM386", "RSM292", "RSM407", "RSM42")
# Reorder rows and columns for ANIb_matrix
ANIb_matrix <- ANIb_matrix[desired_order, desired_order]
view(ANIb_matrix)
# Reorder rows and columns for ANIm_matrix
ANIm_matrix <- ANIm_matrix[desired_order, desired_order]
# Reorder rows and columns for dDDH_matrix
dDDH_matrix <- dDDH_matrix[desired_order, desired_order]
view(ANIm_matrix)
view(dDDH_matrix)
write.csv(ANIb_matrix, file="./tables/ANIb.csv")
write.csv(ANIm_matrix, file="./tables/ANIm.csv")
write.csv(dDDH_matrix, file="./tables/dDDH.csv")
desired_order <- c("P31", "257", "36", "ATCC27570", "CCTCCAB206069",
"CCUG35957","YIM67072","LMG23708","140917MRSA09",
"J18","A117B", "ATCC17931", "576267",
"RSM386", "RSM292", "RSM407", "RSM42")
# Reorder rows and columns for ANIb_matrix
ANIb_matrix <- ANIb_matrix[desired_order, desired_order]
# Reorder rows and columns for ANIm_matrix
ANIm_matrix <- ANIm_matrix[desired_order, desired_order]
# Reorder rows and columns for dDDH_matrix
dDDH_matrix <- dDDH_matrix[desired_order, desired_order]
write.csv(ANIb_matrix, file="./tables/ANIb.csv")
write.csv(ANIm_matrix, file="./tables/ANIm.csv")
write.csv(dDDH_matrix, file="./tables/dDDH.csv")
